{"ast":null,"code":"var _jsxFileName = \"/Users/tazeen/Desktop/IR/src/components/Button.js\";\nimport React from 'react';\nimport './Button.css';\nimport { Link } from 'react-router-dom';\nconst STYLES = ['btn--primary', 'btn--outline'];\nconst SIZES = ['btn--medium', 'btn--large'];\nconst FILL = ['btn--fill'];\nexport const Button = _ref => {\n  let {\n    children,\n    type,\n    onClick,\n    buttonStyle,\n    buttonSize,\n    isSelected,\n    linkTo\n  } = _ref;\n  const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n  const checkFill = isSelected ? FILL[0] : FILL[0];\n\n  if (linkTo === '/sign_up') {\n    return /*#__PURE__*/React.createElement(Link, {\n      to: \"/sign_up\",\n      className: \"btn-mobile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: `btn ${checkFill} ${checkButtonStyle} ${checkButtonSize} `,\n      onClick: onClick,\n      type: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }\n    }, children));\n  } else {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: `btn ${checkFill} ${checkButtonStyle} ${checkButtonSize} `,\n      onClick: onClick,\n      type: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }\n    }, children);\n  }\n};","map":{"version":3,"sources":["/Users/tazeen/Desktop/IR/src/components/Button.js"],"names":["React","Link","STYLES","SIZES","FILL","Button","children","type","onClick","buttonStyle","buttonSize","isSelected","linkTo","checkButtonStyle","includes","checkButtonSize","checkFill"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,MAAMC,MAAM,GAAG,CAAC,cAAD,EAAiB,cAAjB,CAAf;AAEA,MAAMC,KAAK,GAAG,CAAC,aAAD,EAAgB,YAAhB,CAAd;AAEA,MAAMC,IAAI,GAAG,CAAC,WAAD,CAAb;AAEA,OAAO,MAAMC,MAAM,GAAG,QAA8E;AAAA,MAA5E;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA,WAA3B;AAAwCC,IAAAA,UAAxC;AAAoDC,IAAAA,UAApD;AAAgEC,IAAAA;AAAhE,GAA4E;AACnG,QAAMC,gBAAgB,GAAGX,MAAM,CAACY,QAAP,CAAgBL,WAAhB,IAA+BA,WAA/B,GAA6CP,MAAM,CAAC,CAAD,CAA5E;AAEA,QAAMa,eAAe,GAAGZ,KAAK,CAACW,QAAN,CAAeJ,UAAf,IAA6BA,UAA7B,GAA0CP,KAAK,CAAC,CAAD,CAAvE;AAEA,QAAMa,SAAS,GAAGL,UAAU,GAAGP,IAAI,CAAC,CAAD,CAAP,GAAaA,IAAI,CAAC,CAAD,CAA7C;;AAEA,MAAGQ,MAAM,KAAG,UAAZ,EACA;AACC,wBACC,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAoB,MAAA,SAAS,EAAC,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAQ,MAAA,SAAS,EAAG,OAAMI,SAAU,IAAGH,gBAAiB,IAAGE,eAAgB,GAA3E;AAA+E,MAAA,OAAO,EAAEP,OAAxF;AAAiG,MAAA,IAAI,EAAED,IAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8GD,QAA9G,CADD,CADD;AAMA,GARD,MAWA;AACC,wBAEE;AAAQ,MAAA,SAAS,EAAG,OAAMU,SAAU,IAAGH,gBAAiB,IAAGE,eAAgB,GAA3E;AAA+E,MAAA,OAAO,EAAEP,OAAxF;AAAiG,MAAA,IAAI,EAAED,IAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8GD,QAA9G,CAFF;AAKA;AAED,CA1BM","sourcesContent":["import React from 'react'\nimport './Button.css'\nimport { Link } from 'react-router-dom'\n\nconst STYLES = ['btn--primary', 'btn--outline']\n\nconst SIZES = ['btn--medium', 'btn--large']\n\nconst FILL = ['btn--fill']\n\nexport const Button = ( { children, type, onClick, buttonStyle, buttonSize, isSelected, linkTo }) =>{\n\tconst checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n\n\tconst checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n\n\tconst checkFill = isSelected ? FILL[0] : FILL[0];\n\n\tif(linkTo==='/sign_up')\n\t{\n\t\treturn (\n\t\t\t<Link to='/sign_up' className='btn-mobile'>\n\t\t\t\t<button className={`btn ${checkFill} ${checkButtonStyle} ${checkButtonSize} `} onClick={onClick} type={type}>{children}\n\t\t\t\t</button>\t\n\t\t\t</Link>\t\n\t\t);\n\t}\n\t\n\telse\n\t{\n\t\treturn (\n\t\t\t\n\t\t\t\t<button className={`btn ${checkFill} ${checkButtonStyle} ${checkButtonSize} `} onClick={onClick} type={type}>{children}\n\t\t\t\t</button>\n\t\t);\n\t}\n\t\n};"]},"metadata":{},"sourceType":"module"}